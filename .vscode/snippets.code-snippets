{
	// Place your EmoteBot workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Create a command": {
		"prefix": ["command", "cmd"],
		"body": [
			"import { CommandContext } from \"../CommandContext\";",
			"import { IBaseCommand } from \"../ICommand\";",
			"import { PermissionString } from \"discord.js\";",
			"import { Arguments, ArgumentTypes, ArgumentFlags } from \"../CommandArguments\";",
			"",
			"export class Command implements IBaseCommand {",
			"\tpublic description = \"\";",
			"\tpublic aliases = [];",
			"\tpublic ownerOnly = false;",
			"\tpublic guildOnly = false;",
			"\tpublic userPermissions: PermissionString[] = [];",
			"\tpublic clientPermissions: PermissionString[] = [];",
			"\tpublic args: Arguments = {};",
			"",
			"\tpublic async callback(ctx: CommandContext, {}: Args): Promise<unknown> {}",
			"}",
			"",
			"interface Args {",
			"}"
		]
	}
}
